# # Define compiler and flags
# CXX := g++
# CXXFLAGS := -std=c++17 -Wall -g -Iinclude -DSDL_MAIN_HANDLED

# # Define libraries to link against
# LIBS := -lmingw32 -lSDL2_ttf -lSDL2main -lSDL2

# #for linux
# LIBS := -lSDL2_ttf -lSDL2

# # Define the output executable and source files
# SRCS := src/main.cpp src/cursor.cpp src/editor.cpp src/renderer.cpp
# TARGET := prog

# # # Dependency files generated by g++
# # DEPS := $(OBJS:.o=.d)

# # Define the default build target
# all: $(TARGET)

# # Rule to build the target
# $(TARGET): $(SRCS)
# 	$(CXX) $(CXXFLAGS) $(SRCS) -o $(TARGET) $(LIBS)

# # # Rule to compile .cpp files into .o files and generate .d dependency files
# # %.o: %.cpp
# # 	$(CXX) $(CXXFLAGS) -c $< -o $@

# # # Include automatically generated dependency files
# # -include $(DEPS)

# # Rule to clean up the build

# # ...existing code...
# # CXXFLAGS2 := -std=c++17 -Wall -g -Iinclude -DSDL_MAIN_HANDLED

# TEST_SRCS := test/test.cpp
# TEST_TARGET := test_prog

# test: $(TEST_TARGET)
# 	./$(TEST_TARGET)

# $(TEST_TARGET): $(TEST_SRCS) src/cursor.cpp
# 	$(CXX) $(CXXFLAGS) $(TEST_SRCS) src/cursor.cpp -o $(TEST_TARGET)

# # ...existing code...

# clean:
# 	rm -f $(TARGET)

# # Optional: Add .PHONY to prevent conflicts with files named 'clean' or 'all'
# .PHONY: all clean


CXX := g++
CXXFLAGS := -std=c++17 -Wall -g -Iinclude -DSDL_MAIN_HANDLED
LIBS := -lSDL2_ttf -lSDL2

SRCS := src/main.cpp src/cursor.cpp src/editor.cpp src/renderer.cpp
TARGET := prog

TEST_SRCS := test/test.cpp test/catch_amalgamated.cpp src/cursor.cpp
TEST_TARGET := test_prog

all: $(TARGET)

$(TARGET): $(SRCS)
	$(CXX) $(CXXFLAGS) $(SRCS) -o $(TARGET) $(LIBS)

test: $(TEST_TARGET)
	./$(TEST_TARGET)

$(TEST_TARGET): $(TEST_SRCS)
	$(CXX) $(CXXFLAGS) $(TEST_SRCS) -o $(TEST_TARGET)

clean:
	rm -f $(TARGET) $(TEST_TARGET)

.PHONY: all clean test